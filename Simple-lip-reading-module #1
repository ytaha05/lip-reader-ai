# To install library:
#pip install streamlit opencv-python mediapipe
#This is a simple lip detection module. Need data for detecting words





import cv2
import mediapipe as mp
import streamlit as st
import numpy as np

st.title("SilentAid â€“ Lip Detection (Input Module)")

# Initialize MediaPipe
mp_face_mesh = mp.solutions.face_mesh
face_mesh = mp_face_mesh.FaceMesh(static_image_mode=False,
                                   max_num_faces=1,
                                   refine_landmarks=True,
                                   min_detection_confidence=0.5,
                                   min_tracking_confidence=0.5)

# Setup webcam
run = st.checkbox('Start Camera')
FRAME_WINDOW = st.image([])

cap = cv2.VideoCapture(0)

LIPS_LANDMARKS = set()
for pair in mp_face_mesh.FACEMESH_LIPS:
    LIPS_LANDMARKS.update(pair)

while run:
    success, frame = cap.read()
    if not success:
        st.warning("Webcam not detected.")
        break

    # Flip + convert
    frame = cv2.flip(frame, 1)
    rgb = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
    results = face_mesh.process(rgb)

    if results.multi_face_landmarks:
        for face_landmarks in results.multi_face_landmarks:
            h, w, _ = frame.shape
            lip_points = []

            for idx in LIPS_LANDMARKS:
                x = int(face_landmarks.landmark[idx].x * w)
                y = int(face_landmarks.landmark[idx].y * h)
                lip_points.append((x, y))
                cv2.circle(frame, (x, y), 1, (0, 255, 0), -1)

            if lip_points:
                lip_np = np.array(lip_points)
                x, y, w_lip, h_lip = cv2.boundingRect(lip_np)
                cv2.rectangle(frame, (x, y), (x + w_lip, y + h_lip), (0, 0, 255), 1)

    FRAME_WINDOW.image(frame, channels="BGR")

cap.release()
